var sorter = new Sorter<Pixel24bitExplicitStruct>(data.Scan0, data.Width, data.Height, data.Stride);
sorter.Sort(1.0, new PixelComparer.Ascending.GrayScale._24bitExplicitStruct());


        /// <summary>
        /// 
        /// </summary>
        /// <param name="angle">0 ~= Horizontal; 90 ~= Vertical</param>
        /// <param name="comparer"></param>
        public void Sort(double angle, IComparer<TPixel> comparer)
        {
            Span<TPixel> pixels = new(_pixels, _pixelCount);
            double angleNorm = (double)angle / 90.0d;

            for (int i = 0; i < Lerp(_imageHeight, _imageWidth, angleNorm); i++)
            {
                int step = (int)Lerp(1, _imageWidth, angleNorm);
                int lo = i * (int)Lerp(1, _imageWidth, 1 - angleNorm);
                int hi = (int)Lerp(lo + _imageWidth, _pixelCount, angleNorm);

                PixelSpan span = new(pixels, step, lo, hi);
                IntrospectiveSort(span, comparer);
            }
        }